Assignment 4 – SeqTrack Inference Evaluation and Report
Course: Image Processing
Team: [8]
____________________________________________________________________________________
GitHub Repository
https://github.com/HossamAladin/Assignment_4.git
____________________________________________________________________________________

1-Performance Tables
Summary: Per-epoch evaluation metrics and speed for the modified SeqTrack on LaSOT (airplane, coin subsets). Metrics are aggregated by the evaluation pipeline .

Best AUC: 24.91% (epoch 9)
Best IoU: 24.91% (epoch 9)
Best Precision: 27.24% (epoch 5)
Average FPS across epochs: ~18.30
--------------------------------------------------------------------------------------------------------------
Inference Rate 

-------------------------------------------------------------------------------------------------------------

Evaluation Results 


Class-wise Results 

____________________________________________________________________________________

2-Performance Graphs

IoU, Precision, and AUC increase steadily from epochs 1–9, indicating consistent learning and convergence; a small dip at epoch 10 suggests the best overall checkpoint is epoch 9.
----------------------------------------------------------------------------------------------------------------

Success-overlap AUC climbs from ~6% in early epochs to ~25% by epoch 9, with a minor drop at epoch 10; this reflects improving tracking robustness across the evaluation split.

-----------------------------------------------------------------------------------------------------------------
Inference speed is stable at ~18–19 FPS (≈52–56 ms/frame) across all epochs, showing training progress did not affect runtime.
-----------------------------------------------------------------------------------------------------------------
Airplane IoU improves more strongly and remains above coin from epoch 5 onward (≈30% vs ≈19% by epoch 10), indicating better localization on airplane sequences than coin.

------------------------------------------------------------------------------------------------------------------

Both classes trend upward, with airplane AUC consistently higher after epoch 5 (≈30% airplane vs ≈18–21% coin by epochs 9–10), pointing to stronger overlap success on airplane.

--------------------------------------------------------------------------------------------------------------

Airplane precision jumps sharply at epoch 5 and continues to rise toward ≈41 by epoch 10, while coin peaks around epoch 5 (≈20) and then declines, suggesting class-dependent sensitivity of center accuracy.


____________________________________________________________________________________

3-Reflection Section
____________________________________________________________________________________

4-Technical Implementation Details
Model Configuration
Architecture: Vision Transformer encoder with a lightweight decoder.
MODEL.ENCODER.TYPE: vit_base_patch16 (pretrained with mae)
MODEL.DECODER.DEC_LAYERS: 6
MODEL.HIDDEN_DIM: 256
MODEL.BINS: 4000
MODEL.FEATURE_TYPE: x
Templates & Search:
DATA.TEMPLATE.SIZE: 256, NUMBER: 2, FACTOR: 4.0
DATA.SEARCH.SIZE: 256, NUMBER: 1, FACTOR: 4.0
Jitter: template jitter disabled; search jitter enabled (CENTER_JITTER=3.5, SCALE_JITTER=0.5).
Training Hyperparameters (used config: experiments/seqtrack/seqtrack_b256.yaml):
TRAIN.EPOCH: 10
TRAIN.BATCH_SIZE: 2
TRAIN.ENCODER_MULTIPLIER: 0.1, OPTIMIZER: ADAMW, LR: 1e-4, WEIGHT_DECAY: 1e-4
TRAIN.NUM_WORKER: 2, PRINT_INTERVAL: 50, SCHEDULER.TYPE: step, DECAY_RATE: 0.1
TRAIN.SAVE_EVERY_EPOCH: true, SEED: 42
Inference Setup:
TEST.SEARCH_SIZE/TEMPLATE_SIZE: 256, WINDOW: true, NUM_TEMPLATES: 2
Dataset Modifications
Dataset: LaSOT subset restricted to two classes.
DATA.TRAIN.DATASETS_NAME: LASOT
DATA.TRAIN.SUBSET.CLASSES: [airplane, coin]
DATA.TRAIN.SUBSET.TRAIN_SPLIT: 0.8
DATA.TRAIN.SUBSET.EXCLUDE: held-out sequences for evaluation: airplane-{1,9,13,15}, coin-{3,6,7,18}
Sampling: DATA.TRAIN.SAMPLE_PER_EPOCH: 3500
5-Dependency Fixes
requirements.txt added with: PyYAML, easydict, cython, opencv-python, pandas, tqdm, pycocotools, jpeg4py, tb-nightly, tikzplotlib, colorama, lmdb, scipy, visdom, timm, yacs, git+https://github.com/votchallenge/vot-toolkit-python.

____________________________________________________________________________________


6-Evaluation Pipeline
SeqTrack/evaluate_checkpoints.py:
Iterates a range of epochs, resolves checkpoints, and runs tracker inference via tracking.test.run_tracker.
Aggregates success curves and center precision via lib.test.analysis.extract_results and computes per-epoch IoU, AUC, Precision.
Computes dataset-level timing by summing per-sequence runtimes from *_time.txt files (frames, total time, FPS, ms/frame).

____________________________________________________________________________________

7-YAML Configuration Modifications
Active configuration used for this evaluation: seqtrack_b256.yaml
DATA:
TRAIN.DATASETS_NAME: LASOT
TRAIN.SAMPLE_PER_EPOCH: 3500
TRAIN.SUBSET.CLASSES: airplane, coin
TRAIN.SUBSET.TRAIN_SPLIT: 0.8
TRAIN.SUBSET.EXCLUDE: airplane-1, airplane-9, airplane-13, airplane-15, coin-3, coin-6, coin-7, coin-18
SEARCH: SIZE=256, NUMBER=1, FACTOR=4.0, CENTER_JITTER=3.5, SCALE_JITTER=0.5
TEMPLATE: SIZE=256, NUMBER=2, FACTOR=4.0
MODEL:
ENCODER.TYPE: vit_base_patch16 (PRETRAIN_TYPE: mae)
DECODER.DEC_LAYERS: 6
HIDDEN_DIM: 256; BINS: 4000; FEATURE_TYPE: x
TRAIN:
EPOCH: 10; BATCH_SIZE: 2; ENCODER_MULTIPLIER: 0.1
OPTIMIZER: ADAMW; LR: 1e-4; WEIGHT_DECAY: 1e-4
SCHEDULER.TYPE: step; DECAY_RATE: 0.1
NUM_WORKER: 2; PRINT_INTERVAL: 50; SAVE_EVERY_EPOCH: true; SEED: 42
TEST:
SEARCH_SIZE/TEMPLATE_SIZE: 256; SEARCH_FACTOR/TEMPLATE_FACTOR: 4.0
WINDOW: true; NUM_TEMPLATES: 2
UPDATE_INTERVALS: VOT20/21/22 = 1
UPDATE_THRESHOLD: VOT20/21/22 = 0.55
EPOCH: 500
Evaluation registry present at SeqTrack/external/vot20/seqtrack/config.yaml registering VOT2020 INI parameter files.

____________________________________________________________________________________


8-Evaluation Setup
Model: SeqTrack-B256
Dataset: LaSOT (8 sequences: 4 airplane + 4 coin)
Epochs Evaluated: 1–10
Total Runs: 80 (10 epochs × 8 sequences)
Environment: Windows 11, Python 3.x, PyTorch

____________________________________________________________________________________

9-Key Findings
IoU and AUC rise steadily through epoch 9, with a slight dip at epoch 10. Precision peaks earlier (epoch 5) and then stabilizes.
Inference speed is stable across epochs at ~18–19 FPS.
The short run (10 epochs) on a small class-restricted subset behaves as expected: early checkpoints underperform; by epochs 5–10 the tracker stabilizes and metrics increase. On such a tiny split, one failed sequence can noticeably affect averages.

____________________________________________________________________________________

10-Performance Summary
Best AUC: 24.91% (epoch 9)
Best IoU: 24.91% (epoch 9)
Best Precision: 27.24% (epoch 5)
Average FPS: ~18.30
General trend: Clear improvement across epochs with stable runtime; epoch 9 is the strongest overall checkpoint.
